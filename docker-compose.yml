version: '3.8'

services:
  price-feed:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: neo-price-feed
    environment:
      # Production environment variables
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      
      # Neo Configuration (set these in your environment or .env file)
      - NEO_RPC_ENDPOINT=${NEO_RPC_ENDPOINT:-http://seed1t5.neo.org:20332}
      - NEO_CONTRACT_HASH=${NEO_CONTRACT_HASH}
      - NEO_TEE_ACCOUNT_ADDRESS=${NEO_TEE_ACCOUNT_ADDRESS}
      - NEO_TEE_ACCOUNT_PRIVATE_KEY=${NEO_TEE_ACCOUNT_PRIVATE_KEY}
      - NEO_MASTER_ACCOUNT_ADDRESS=${NEO_MASTER_ACCOUNT_ADDRESS}
      - NEO_MASTER_ACCOUNT_PRIVATE_KEY=${NEO_MASTER_ACCOUNT_PRIVATE_KEY}
      
      # API Keys (set these in your environment or .env file)
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET}
      - COINBASE_API_KEY=${COINBASE_API_KEY}
      - COINBASE_API_SECRET=${COINBASE_API_SECRET}
      - OKEX_API_KEY=${OKEX_API_KEY}
      - OKEX_API_SECRET=${OKEX_API_SECRET}
      - OKEX_PASSPHRASE=${OKEX_PASSPHRASE}
      
      # Logging Configuration
      - Serilog__MinimumLevel__Default=Information
      - Serilog__WriteTo__0__Name=Console
      
    ports:
      - "8080:8080"
    
    volumes:
      # Mount attestations directory for persistence
      - ./attestations:/app/attestations
      
    restart: unless-stopped
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: neo-price-feed-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: neo-price-feed-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: neo-price-feed-network